(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{110:function(n,e,o){"use strict";o.r(e),o.d(e,"frontMatter",(function(){return d})),o.d(e,"metadata",(function(){return i})),o.d(e,"toc",(function(){return a})),o.d(e,"default",(function(){return l}));var r=o(3),t=o(7),c=(o(0),o(123)),d={id:"accordion",title:"Accordion",sidebar_label:"Accordion"},i={unversionedId:"components/accordion",id:"components/accordion",isDocsHomePage:!1,title:"Accordion",description:"`tsx",source:"@site/docs/components/accordion.mdx",slug:"/components/accordion",permalink:"/kodiak-ui/components/accordion",editUrl:"https://github.com/skyverge/kodiak-ui/tree/master/documentation/docs/components/accordion.mdx",version:"current",sidebar_label:"Accordion",sidebar:"docs",previous:{title:"Textarea",permalink:"/kodiak-ui/primitives/textarea"},next:{title:"Autocomplete",permalink:"/kodiak-ui/components/autocomplete"}},a=[{value:"Controlled",id:"controlled",children:[]}],s={toc:a};function l(n){var e=n.components,o=Object(t.a)(n,["components"]);return Object(c.b)("wrapper",Object(r.a)({},s,o,{components:e,mdxType:"MDXLayout"}),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-tsx"},"const {\n  setExpandedItems,\n  toggleExpanded,\n  checkIsExpanded,\n  register,\n  getHeaderProps,\n} = useAccordion({\n  onChange: ({ expandedItems }) => console.info({ expandedItems }),\n  defaultExpandedItems: ['second'],\n  allowMultiple: false,\n})\n\nreturn (\n  <Flex sx={{ flexDirection: 'column', p: 6 }}>\n    <Accordion>\n      <AccordionItem>\n        <AccordionHeader\n          ref={node => register(node, { key: 'first' })}\n          {...getHeaderProps({ key: 'first' })}\n        >\n          <Text fontWeight=\"bold\" fontSize={3} mb={0}>\n            Accordion header - toggle me\n          </Text>\n          <CaretFillDown\n            tabIndex={0}\n            onClick={() => {\n              toggleExpanded({ key: 'first' })\n            }}\n            sx={{\n              transform: checkIsExpanded({ key: 'first' })\n                ? 'rotate(180deg)'\n                : 'rotate(0)',\n            }}\n          />\n        </AccordionHeader>\n        {checkIsExpanded({ key: 'first' }) && (\n          <>\n            <AccordionBody ref={node => register(node, { key: 'first' })}>\n              First body contents.\n            </AccordionBody>\n            <AccordionFooter>Footer</AccordionFooter>\n          </>\n        )}\n      </AccordionItem>\n\n      <AccordionItem>\n        <AccordionHeader\n          ref={node => register(node, { key: 'second' })}\n          {...getHeaderProps({ key: 'second' })}\n        >\n          <Text fontWeight=\"bold\" fontSize={3} mb={0}>\n            Accordion header - toggle me\n          </Text>\n          <CaretFillDown\n            tabIndex={0}\n            onClick={() => {\n              toggleExpanded({ key: 'second' })\n            }}\n            sx={{\n              transform: checkIsExpanded({ key: 'second' })\n                ? 'rotate(180deg)'\n                : 'rotate(0)',\n            }}\n          />\n        </AccordionHeader>\n        {checkIsExpanded({ key: 'second' }) && (\n          <>\n            <AccordionBody ref={node => register(node, { key: 'second' })}>\n              Body\n            </AccordionBody>\n            <AccordionFooter>Footer</AccordionFooter>\n          </>\n        )}\n      </AccordionItem>\n    </Accordion>\n  </Flex>\n)\n")),Object(c.b)("h2",{id:"controlled"},"Controlled"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-tsx"},"const [expanded, setExpanded] = React.useState<string | null>(null)\n\nfunction toggleExpanded({ key }: { key: string }) {\n  if (!checkIsExpanded({ key, expanded })) {\n    setExpanded(key)\n  } else {\n    setExpanded(null)\n  }\n}\n\nreturn (\n  <Accordion\n    sx={{\n      p: 6,\n      '& > *:not(:last-child)': {\n        mb: 4,\n      },\n    }}\n  >\n    <AccordionItem>\n      <AccordionHeader\n        id=\"firstAccordion\"\n        aria-expanded={checkIsExpanded({ key: 'first', expanded })}\n        aria-controls=\"firstBody\"\n        tabIndex={0}\n        onClick={() => {\n          toggleExpanded({ key: 'first' })\n        }}\n        onKeyUp={(event: any) => {\n          if (['Enter', ' '].includes(event.key)) {\n            toggleExpanded({ key: 'first' })\n          }\n        }}\n        sx={{\n          outline: 'none',\n          px: 4,\n          py: 5,\n          cursor: 'pointer',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <Text fontWeight=\"bold\" fontSize={3} mb={0}>\n          Accordion header - toggle me\n        </Text>\n        <CaretFillDown\n          sx={{\n            transform: checkIsExpanded({ key: 'first', expanded })\n              ? 'rotate(180deg)'\n              : 'rotate(0)',\n          }}\n        />\n      </AccordionHeader>\n      {checkIsExpanded({ key: 'first', expanded }) && (\n        <>\n          <AccordionBody\n            id=\"firstBody\"\n            aria-labelledby=\"firstAccordion\"\n            role=\"region\"\n            sx={{\n              borderTop: '1px solid',\n              borderBottom: '1px solid',\n              borderColor: 'gray.2',\n              px: 4,\n              py: 5,\n            }}\n          >\n            Body\n          </AccordionBody>\n          <AccordionFooter\n            sx={{\n              px: 4,\n              py: 5,\n            }}\n          >\n            Footer\n          </AccordionFooter>\n        </>\n      )}\n    </AccordionItem>\n\n    <AccordionItem\n      sx={{\n        border: '1px solid',\n        borderColor: 'gray.2',\n        borderRadius: 'default',\n        maxWidth: '400px',\n      }}\n    >\n      <AccordionHeader\n        id=\"secondAccordion\"\n        aria-expanded={checkIsExpanded({ key: 'second', expanded })}\n        aria-controls=\"secondBody\"\n        tabIndex={0}\n        onClick={() => {\n          toggleExpanded({ key: 'second' })\n        }}\n        onKeyUp={(event: any) => {\n          if (['Enter', ' '].includes(event.key)) {\n            toggleExpanded({ key: 'second' })\n          }\n        }}\n        sx={{\n          outline: 'none',\n          px: 4,\n          py: 5,\n          cursor: 'pointer',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <Text fontWeight=\"bold\" fontSize={3} mb={0}>\n          Accordion header - toggle me\n        </Text>\n        <CaretFillDown\n          sx={{\n            transform: checkIsExpanded({ key: 'second', expanded })\n              ? 'rotate(180deg)'\n              : 'rotate(0)',\n          }}\n        />\n      </AccordionHeader>\n      {checkIsExpanded({ key: 'second', expanded }) && (\n        <>\n          <AccordionBody\n            id=\"secondBody\"\n            aria-labelledby=\"secondAccordion\"\n            role=\"region\"\n            sx={{\n              borderTop: '1px solid',\n              borderBottom: '1px solid',\n              borderColor: 'gray.2',\n              px: 4,\n              py: 5,\n            }}\n          >\n            Body\n          </AccordionBody>\n          <AccordionFooter\n            sx={{\n              px: 4,\n              py: 5,\n            }}\n          >\n            Footer\n          </AccordionFooter>\n        </>\n      )}\n    </AccordionItem>\n  </Accordion>\n)\n")))}l.isMDXComponent=!0},123:function(n,e,o){"use strict";o.d(e,"a",(function(){return p})),o.d(e,"b",(function(){return x}));var r=o(0),t=o.n(r);function c(n,e,o){return e in n?Object.defineProperty(n,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[e]=o,n}function d(n,e){var o=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),o.push.apply(o,r)}return o}function i(n){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?d(Object(o),!0).forEach((function(e){c(n,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(o)):d(Object(o)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(o,e))}))}return n}function a(n,e){if(null==n)return{};var o,r,t=function(n,e){if(null==n)return{};var o,r,t={},c=Object.keys(n);for(r=0;r<c.length;r++)o=c[r],e.indexOf(o)>=0||(t[o]=n[o]);return t}(n,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(n);for(r=0;r<c.length;r++)o=c[r],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(n,o)&&(t[o]=n[o])}return t}var s=t.a.createContext({}),l=function(n){var e=t.a.useContext(s),o=e;return n&&(o="function"==typeof n?n(e):i(i({},e),n)),o},p=function(n){var e=l(n.components);return t.a.createElement(s.Provider,{value:e},n.children)},u={inlineCode:"code",wrapper:function(n){var e=n.children;return t.a.createElement(t.a.Fragment,{},e)}},y=t.a.forwardRef((function(n,e){var o=n.components,r=n.mdxType,c=n.originalType,d=n.parentName,s=a(n,["components","mdxType","originalType","parentName"]),p=l(o),y=r,x=p["".concat(d,".").concat(y)]||p[y]||u[y]||c;return o?t.a.createElement(x,i(i({ref:e},s),{},{components:o})):t.a.createElement(x,i({ref:e},s))}));function x(n,e){var o=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var c=o.length,d=new Array(c);d[0]=y;var i={};for(var a in e)hasOwnProperty.call(e,a)&&(i[a]=e[a]);i.originalType=n,i.mdxType="string"==typeof n?n:r,d[1]=i;for(var s=2;s<c;s++)d[s]=o[s];return t.a.createElement.apply(null,d)}return t.a.createElement.apply(null,o)}y.displayName="MDXCreateElement"}}]);