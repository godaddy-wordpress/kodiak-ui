(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{120:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return c}));var a=n(3),l=n(7),r=(n(0),n(123)),b={id:"autocomplete",title:"Autocomplete",sidebar_label:"Autocomplete"},o={unversionedId:"components/autocomplete",id:"components/autocomplete",isDocsHomePage:!1,title:"Autocomplete",description:"Autocomplete is a text input that allows you to filter suggested options based on the entered text and select single or multiple values.",source:"@site/docs/components/autocomplete.mdx",slug:"/components/autocomplete",permalink:"/kodiak-ui/components/autocomplete",editUrl:"https://github.com/skyverge/kodiak-ui/tree/master/documentation/docs/components/autocomplete.mdx",version:"current",sidebar_label:"Autocomplete",sidebar:"docs",previous:{title:"Accordion",permalink:"/kodiak-ui/components/accordion"},next:{title:"Combobox",permalink:"/kodiak-ui/components/combobox"}},p=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Example",id:"example",children:[]},{value:"API",id:"api",children:[{value:"Autocomplete props",id:"autocomplete-props",children:[]},{value:"useAutocomplete props",id:"useautocomplete-props",children:[]}]}],i={toc:p};function c(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Autocomplete is a text input that allows you to filter suggested options based on the entered text and select single or multiple values.\nThey are often known as ",Object(r.b)("inlineCode",{parentName:"p"},"Combobox")," elements as well."),Object(r.b)("h3",{id:"installation"},"Installation"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"yarn add @kodiak-ui/autocomplete\n")),Object(r.b)("h3",{id:"usage"},"Usage"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"import { Autocomplete } from '@kodiak-ui/autocomplete'\n")),Object(r.b)("p",null,"Autocomplete provides an accessible and well structured component for easily rendering the input and listbox elements. The\n",Object(r.b)("inlineCode",{parentName:"p"},"useAutocomplete")," component will provide all logic necessary to render your own autocomplete component with any HTML elements and the\nKodiak UI primitives. Each primary element to Autocomplete can be overwritten with a render prop to allow you to add or remove functionality\nfrom the default Autocomplete component."),Object(r.b)("h3",{id:"example"},"Example"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"const options = ['Option 1', 'Option 2']\n\n<Autocomplete label=\"Autocomplete label\" options={options} />\n")),Object(r.b)("h2",{id:"api"},"API"),Object(r.b)("p",null,"Like mentioned above, all logic lives in ",Object(r.b)("inlineCode",{parentName:"p"},"useAutocomplete")," and all props can be passed into the ",Object(r.b)("inlineCode",{parentName:"p"},"Autocomplete")," component. There are a few additional props that\n",Object(r.b)("inlineCode",{parentName:"p"},"Autocomplete")," accepts that ",Object(r.b)("inlineCode",{parentName:"p"},"useAutocomplete")," doesn't."),Object(r.b)("h3",{id:"autocomplete-props"},"Autocomplete props"),Object(r.b)("p",null,"Autocomplete accepts all ",Object(r.b)("inlineCode",{parentName:"p"},"useAutocomplete")," props as well."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Name"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"label","*"),Object(r.b)("td",{parentName:"tr",align:null},"string"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"The rendered label text for the input")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"options","*"),Object(r.b)("td",{parentName:"tr",align:null},"string[]"),Object(r.b)("td",{parentName:"tr",align:null},"[]"),Object(r.b)("td",{parentName:"tr",align:null},"Available options to filter against when input changes")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"placeholder"),Object(r.b)("td",{parentName:"tr",align:null},"string"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"Placeholder text to render in the input")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"isDisabled"),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Determine whether the input should be disabled or not")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"placement"),Object(r.b)("td",{parentName:"tr",align:null},"Placement"),Object(r.b)("td",{parentName:"tr",align:null},"bottom-start"),Object(r.b)("td",{parentName:"tr",align:null},"Placement of the listbox")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"offset"),Object(r.b)("td",{parentName:"tr",align:null},"[number, number]"),Object(r.b)("td",{parentName:"tr",align:null},"[0, 8]"),Object(r.b)("td",{parentName:"tr",align:null},"Manage the offet position of the listbox from the input")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"renderInput"),Object(r.b)("td",{parentName:"tr",align:null},"(inputProps, clearButtonProps, popoverButtonProps) => ReactNode"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"Render prop to overwrite the default input")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"renderOption"),Object(r.b)("td",{parentName:"tr",align:null},"(props, option, index) => ReactNode"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"Render prop to overwrite the default listbox option element")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"renderClearButton"),Object(r.b)("td",{parentName:"tr",align:null},"(props) => ReactNode"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"Render prop to overwrite the default clear button")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"renderPopoverButton"),Object(r.b)("td",{parentName:"tr",align:null},"(props) => ReactNode"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"Render prop to overwrite the default popover button to toggle visibility of the listbox")))),Object(r.b)("h3",{id:"useautocomplete-props"},"useAutocomplete props"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Name"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"options","*"),Object(r.b)("td",{parentName:"tr",align:null},"string[]"),Object(r.b)("td",{parentName:"tr",align:null},"[]"),Object(r.b)("td",{parentName:"tr",align:null},"Available options to suggest when input changes")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"componentName"),Object(r.b)("td",{parentName:"tr",align:null},"string"),Object(r.b)("td",{parentName:"tr",align:null},"useAutocomplete"),Object(r.b)("td",{parentName:"tr",align:null},"Component name for dev tools")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"isOpen"),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Determines whether the listbox should be visible or not")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"isClearable"),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Allows the value to be cleared by selecting the close button for the input")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"isDisabled"),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Allows the input to be disabled or not")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"isMulti"),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Allows multiple options to be selected")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"value"),Object(r.b)("td",{parentName:"tr",align:null},"string or string[]"),Object(r.b)("td",{parentName:"tr",align:null},"null"),Object(r.b)("td",{parentName:"tr",align:null},"Controll prop for the autocomplete value")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"inputValue"),Object(r.b)("td",{parentName:"tr",align:null},"string"),Object(r.b)("td",{parentName:"tr",align:null},"''"),Object(r.b)("td",{parentName:"tr",align:null},"Controll prop for the input value")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"defaultValue"),Object(r.b)("td",{parentName:"tr",align:null},"string"),Object(r.b)("td",{parentName:"tr",align:null},"string[]"),Object(r.b)("td",{parentName:"tr",align:null},"Default value for rendering an initial selected option")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"openOnFocus"),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Opens the listbox when the input gets focus")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"pageSize"),Object(r.b)("td",{parentName:"tr",align:null},"number"),Object(r.b)("td",{parentName:"tr",align:null},"5"),Object(r.b)("td",{parentName:"tr",align:null},"The number of options to navigate over when using page down and page up keyboard keys to navigate the options")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"blurOnSelect"),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Blur the input when a value has been selected")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"clearOnBlur"),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Clear the value when input blurs")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"clearOnEscape"),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"Clear the value when the Escape key is pressed")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"closeOnSelect"),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"true"),Object(r.b)("td",{parentName:"tr",align:null},"Close the listbox when a value has been selected")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"onCloseChange"),Object(r.b)("td",{parentName:"tr",align:null},"(event) => void"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"Callback for when the listbox is closed")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"onOpenChange"),Object(r.b)("td",{parentName:"tr",align:null},"(event) => void"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"Callback when the listbox is opened")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"onValueChange"),Object(r.b)("td",{parentName:"tr",align:null},"(event, value) => void"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"Callback when the autocomplete value changes")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"onInputValueChange"),Object(r.b)("td",{parentName:"tr",align:null},"(event, value) => void"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"Callback when the input value changes")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"onHighlightedIndexChange"),Object(r.b)("td",{parentName:"tr",align:null},"(option) => void"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"Callback when an option is highlighted")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"getOptionSelected"),Object(r.b)("td",{parentName:"tr",align:null},"(option, value) => boolean"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"Configurable getter method to determine if an option is selected or not")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"getOptionDisabled"),Object(r.b)("td",{parentName:"tr",align:null},"(option) => boolean"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"Configurable getter to determine if an option is disabled")))))}c.isMDXComponent=!0},123:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return s}));var a=n(0),l=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=l.a.createContext({}),c=function(e){var t=l.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return l.a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},m=l.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,b=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,s=u["".concat(b,".").concat(m)]||u[m]||d[m]||r;return n?l.a.createElement(s,o(o({ref:t},i),{},{components:n})):l.a.createElement(s,o({ref:t},i))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,b=new Array(r);b[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,b[1]=o;for(var i=2;i<r;i++)b[i]=n[i];return l.a.createElement.apply(null,b)}return l.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);